{"utilities":{},"programModules":{"EXT460MI":{"program":"EXT460MI","triggers":{},"transactions":{"RetrPutAwayLoc":{"sourceUuid":"999aeaa5-0f4a-4060-a947-6b2fb582f9cb","name":"RetrPutAwayLoc","program":"EXT460MI","description":"Retrieve Put Away Location","active":true,"multi":false,"modified":1650030538497,"modifiedBy":"RASANA","outputFields":[{"name":"WHSL","description":"Final Bin Location","length":10,"mandatory":false,"type":"A"}],"inputFields":[{"name":"ITNO","description":"Item Number","length":15,"mandatory":true,"type":"A"},{"name":"WHLT","description":"Location Type","length":2,"mandatory":true,"type":"A"},{"name":"WHLO","description":"Warehouse","length":3,"mandatory":true,"type":"A"},{"name":"PANO","description":"Put-Away Number","length":20,"mandatory":true,"type":"A"},{"name":"TRQT","description":"Quantity","length":17,"mandatory":true,"type":"N"},{"name":"KPID","description":"KPI ID","length":50,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{}}},"sources":{"999aeaa5-0f4a-4060-a947-6b2fb582f9cb":{"uuid":"999aeaa5-0f4a-4060-a947-6b2fb582f9cb","updated":1650033045668,"updatedBy":"RASANA","created":1647878399312,"createdBy":"NAVALM","apiVersion":"0.9","beVersion":"16.0.0.20220118134570","codeHash":"BEC6D4D995C4BDA61A82D06A038F82DCBC7BFBBC0E049D1AD75EC14737CF82B7","code":""}}}